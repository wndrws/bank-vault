<?xml version="1.0" encoding="UTF-8"?><testrun duration="8945" footerText="Generated by IntelliJ IDEA on 21.12.18 3:13" name="All in bank-vault-core_test">
    <count name="total" value="85"/>
    <count name="passed" value="85"/>
    <config nameIsGenerated="true" configId="JUnit" name="All in bank-vault-core_test">
        <module name="bank-vault-core_test"/>
        <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false"/>
        <option name="ALTERNATIVE_JRE_PATH"/>
        <option name="PACKAGE_NAME" value=""/>
        <option name="MAIN_CLASS_NAME" value=""/>
        <option name="METHOD_NAME" value=""/>
        <option name="TEST_OBJECT" value="package"/>
        <option name="VM_PARAMETERS" value="-ea"/>
        <option name="PARAMETERS" value=""/>
        <option name="WORKING_DIRECTORY" value="file://%MODULE_WORKING_DIR%"/>
        <option name="PASS_PARENT_ENVS" value="true"/>
        <option name="TEST_SEARCH_SCOPE">
            <value defaultName="singleModule"/>
        </option>
        <patterns/>
    </config>
    <root name="&lt;default package&gt;" location="java:suite://&lt;default package&gt;">
        <output type="stdout">&amp;quot;C:\Program Files\Java\jdk1.8.0_181\bin\java&amp;quot; -ea &amp;quot;-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2018.1\lib\coverage-agent.jar=C:\Users\WebSter\AppData\Local\Temp\coverageargs&amp;quot; -Didea.test.cyclic.buffer.size=1048576 &amp;quot;-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2018.1\lib\idea_rt.jar=55763:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2018.1\bin&amp;quot; -Dfile.encoding=UTF-8 -classpath &amp;quot;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2018.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2018.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2018.1\plugins\junit\lib\junit5-rt.jar;C:\Users\WebSter\.m2\repository\org\junit\vintage\junit-vintage-engine\5.1.0\junit-vintage-engine-5.1.0.jar;C:\Users\WebSter\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\WebSter\.m2\repository\org\junit\platform\junit-platform-engine\1.1.0\junit-platform-engine-1.1.0.jar;C:\Users\WebSter\.m2\repository\org\junit\platform\junit-platform-commons\1.1.0\junit-platform-commons-1.1.0.jar;C:\Users\WebSter\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Users\WebSter\IdeaProjects\bank-vault\bank-vault-core\out\test\classes;C:\Users\WebSter\IdeaProjects\bank-vault\bank-vault-core\out\test\resources;C:\Users\WebSter\IdeaProjects\bank-vault\bank-vault-core\out\production\classes;C:\Users\WebSter\IdeaProjects\bank-vault\bank-vault-core\out\production\resources;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-web\2.0.4.RELEASE\98d49e981ecf804da877d84259b7b0d1ec2fb6f6\spring-boot-starter-web-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-data-jpa\2.0.4.RELEASE\69970d3a7c353d8e727e2c6b2a9e621114f5e089\spring-boot-starter-data-jpa-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-json\2.0.4.RELEASE\c7afabf0d7c85db178da4ce0634e3bd2ddb0eb71\spring-boot-starter-json-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-aop\2.0.4.RELEASE\5e963eb965b72e113a05351c482e3d613f04e59d\spring-boot-starter-aop-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-test\2.0.4.RELEASE\8f473705d2742b669f0318f10a956f94a93ba3d2\spring-boot-starter-test-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-jdbc\2.0.4.RELEASE\3e9b13a3bee8b8f9b2b9fde4f9e9aac0ccf2b3ba\spring-boot-starter-jdbc-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter\2.0.4.RELEASE\ec46c63a2adeee40058eff1a6baefca13975dc94\spring-boot-starter-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-logging\2.0.4.RELEASE\dcd1a2c431c970f44adae64d9145133979a513ab\spring-boot-starter-logging-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\ch.qos.logback\logback-classic\1.2.3\7c4f3c474fb2c041d8028740440937705ebb473a\logback-classic-1.2.3.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-swagger2\2.9.2\362676bc7f4c6f9f1d568741becab0dfc198c898\springfox-swagger2-2.9.2.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.data\spring-data-jpa\2.0.9.RELEASE\30acb36f682367d93ed400b4324fe2559f0fcb\spring-data-jpa-2.0.9.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-swagger-common\2.9.2\b38a41b3044af80cb7f41f67be5d158c9f6491ec\springfox-swagger-common-2.9.2.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\io.swagger\swagger-models\1.5.20\fb3a23bad80c5ed84db9dd150db2cba699531458\swagger-models-1.5.20.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-swagger-ui\2.9.2\d542382a88ff3ea8d4032c28b2b0325797fada7d\springfox-swagger-ui-2.9.2.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-spring-web\2.9.2\ed2ed714a6cba8804d00f80f0534901e4c7a3211\springfox-spring-web-2.9.2.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-schema\2.9.2\e268f38774b16bb51a92ccaef0dcf3dc651c0cee\springfox-schema-2.9.2.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-spi\2.9.2\6ac686190a6ceaccdae8b50d03b0501d144a6666\springfox-spi-2.9.2.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\io.springfox\springfox-core\2.9.2\2e26f58939c594fb5c958c3a1c7bedf83d2f2702\springfox-core-2.9.2.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.plugin\spring-plugin-metadata\1.2.0.RELEASE\97223fc496b6cab31602eedbd4202aa4fff0d44f\spring-plugin-metadata-1.2.0.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.plugin\spring-plugin-core\1.2.0.RELEASE\f380e7760032e7d929184f8ad8a33716b75c0657\spring-plugin-core-1.2.0.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.zaxxer\HikariCP\2.7.9\a83113d2c091d0d0f853dad3217bd7df3beb6ae3\HikariCP-2.7.9.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.data\spring-data-commons\2.0.9.RELEASE\9c8f3ea29c9dd6e4c41876c46e9f5f4987390beb\spring-data-commons-2.0.9.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.apache.logging.log4j\log4j-to-slf4j\2.10.0\f7e631ccf49cfc0aefa4a2a728da7d374c05bd3c\log4j-to-slf4j-2.10.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.jayway.jsonpath\json-path\2.4.0\765a4401ceb2dc8d40553c2075eb80a8fa35c2ae\json-path-2.4.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.slf4j\jul-to-slf4j\1.7.25\af5364cd6679bfffb114f0dec8a157aaa283b76\jul-to-slf4j-1.7.25.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.slf4j\slf4j-api\1.7.25\da76ca59f6a57ee3102f8f9bd9cee742973efa8a\slf4j-api-1.7.25.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\ch.qos.logback\logback-core\1.2.3\864344400c3d4d92dfeb0a305dc87d953677c03c\logback-core-1.2.3.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.postgresql\postgresql\42.2.0\7a7824a6ddbf4e43c08d4ee4e92e93485f27d1d7\postgresql-42.2.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.google.guava\guava\23.0\c947004bb13d18182be60077ade044099e4f26f1\guava-23.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.statemachinesystems\mock-clock\1.0\69a6baa9589edf4d5ee05a6ebd2d0ddf5440a907\mock-clock-1.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.projectlombok\lombok\1.16.18\557d13dcb647038dc687390711ccb5c9b3ffbd60\lombok-1.16.18.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.assertj\assertj-core\3.8.0\b209d90ff2e279bee3e02547ee7b11349c52d0e3\assertj-core-3.8.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.postgresql\postgresql\42.2.5\951b7eda125f3137538a94e2cbdcf744088ad4c2\postgresql-42.2.5.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.mockito\mockito-core\2.11.0\f819efbe6ef3f010382cdc1b4d33749e377e1cc4\mockito-core-2.11.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-starter-tomcat\2.0.4.RELEASE\dcf28989a34b0801fea0e810c371fb9dab1e7784\spring-boot-starter-tomcat-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.hibernate.validator\hibernate-validator\6.0.11.Final\36f9d10a11e4768f55e8fb91ebe4338a5c43954e\hibernate-validator-6.0.11.Final.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.assertj\assertj-core\3.9.1\c5ce126b15f28d56cd8f960c1a6a058b9c9aea87\assertj-core-3.9.1.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-webmvc\5.0.8.RELEASE\7e5fe57590ca8e4468e50fe1d92b0b67aa4a327a\spring-webmvc-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.mockito\mockito-core\2.15.0\b84bfbbc29cd22c9529409627af6ea2897f4fa85\mockito-core-2.15.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-web\5.0.8.RELEASE\fa43cdadb4ab2491fd1d0ddb06c0808e4b60fc85\spring-web-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.h2database\h2\1.4.197\bb391050048ca8ae3e32451b5a3714ecd3596a46\h2-1.4.197.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.hibernate\hibernate-core\5.2.17.Final\f2dc36470e7a2ffcf6106bb1625ecf5b54bb5f65\hibernate-core-5.2.17.Final.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.junit.jupiter\junit-jupiter-engine\5.1.0\c54b96b465bb5b49c7708d734a4180dd95422754\junit-jupiter-engine-5.1.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\javax.transaction\javax.transaction-api\1.2\d81aff979d603edd90dcd8db2abc1f4ce6479e3e\javax.transaction-api-1.2.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.junit.jupiter\junit-jupiter-params\5.1.0\80a2ce4c1aed8a58eaca9ef019eef1d1f33fd334\junit-jupiter-params-5.1.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-aspects\5.0.8.RELEASE\e66926466b8c72658d7e536923041dc93976baf3\spring-aspects-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.google.code.findbugs\jsr305\1.3.9\40719ea6961c0cb6afaeb6a921eaa1f6afd4cfdf\jsr305-1.3.9.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.junit.platform\junit-platform-launcher\1.1.0\ba098edde4e59cacd9225e238ea3ad9c946684ab\junit-platform-launcher-1.1.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.google.errorprone\error_prone_annotations\2.0.18\5f65affce1684999e2f4024983835efc3504012e\error_prone_annotations-2.0.18.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.google.j2objc\j2objc-annotations\1.1\ed28ded51a8b1c6b112568def5f4b455e6809019\j2objc-annotations-1.1.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.codehaus.mojo\animal-sniffer-annotations\1.14\775b7e22fb10026eed3f86e8dc556dfafe35f2d5\animal-sniffer-annotations-1.14.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\io.swagger\swagger-annotations\1.5.20\16051f93ce11ca489a5313775d825f82fcc2cd6c\swagger-annotations-1.5.20.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.fasterxml\classmate\1.4.0\291658ac2ce2476256c7115943652c0accb5c857\classmate-1.4.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.mapstruct\mapstruct\1.2.0.Final\8609d6eb044e9f6c73cb24c8f2f4ed5c72a249c7\mapstruct-1.2.0.Final.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\net.bytebuddy\byte-buddy\1.8.12\82a340b11ea0a55e5d51b3ae559003454b8bf320\byte-buddy-1.8.12.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\net.bytebuddy\byte-buddy-agent\1.7.4\66286677db75148b3c2fb94e72f1c61aceb20e33\byte-buddy-agent-1.7.4.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.objenesis\objenesis\2.6\639033469776fd37c08358c6b92a4761feb2af4b\objenesis-2.6.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-autoconfigure\2.0.4.RELEASE\65cd1244d606acc02ab7bfc47a203a3fe2400dda\spring-boot-autoconfigure-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot\2.0.4.RELEASE\c8619c5b06d4dcdb4cac1e5e9c839e6e8b1c8574\spring-boot-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\javax.annotation\javax.annotation-api\1.3.2\934c04d3cfef185a8008e7bf34331b79730a9d43\javax.annotation-api-1.3.2.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-context\5.0.8.RELEASE\3a067d8990761111c9b6d1d895640be26cc1fb38\spring-context-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-expression\5.0.8.RELEASE\f23158f22c917df2cddf2ecebc398a9e95f95fae\spring-expression-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-orm\5.0.8.RELEASE\4da63072d1ed6a2eb4bc0a4c8da5e09f39b5021e\spring-orm-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-jdbc\5.0.8.RELEASE\efcf5f0ccaaa9deec2d9133c9d6bfbb7e55370ff\spring-jdbc-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\net.bytebuddy\byte-buddy-agent\1.7.9\a6c65f9da7f467ee1f02ff2841ffd3155aee2fc9\byte-buddy-agent-1.7.9.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-tx\5.0.8.RELEASE\b6488db6192f71bd682a13b9d42127307631c616\spring-tx-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-aop\5.0.8.RELEASE\f5086c1a3185c481104511837427b39a07a57aa2\spring-aop-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-test-autoconfigure\2.0.4.RELEASE\8a2e3f31e607fdb08deda2f59263ce177f1c4310\spring-boot-test-autoconfigure-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-beans\5.0.8.RELEASE\5fc965d3e7f5515099244857a8ae9e2a208c169b\spring-beans-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework.boot\spring-boot-test\2.0.4.RELEASE\8a17fc3cf16b6d75f2ba132ade04409a670095de\spring-boot-test-2.0.4.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-core\5.0.8.RELEASE\dc39c49e3246cdf73d3786ac41119140aed3fa08\spring-core-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\junit\junit\4.12\2973d150c0dc1fefe998f834810d68f278ea58ec\junit-4.12.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.hamcrest\hamcrest-library\1.3\4785a3c21320980282f9f33d0d1264a69040538f\hamcrest-library-1.3.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.yaml\snakeyaml\1.19\2d998d3d674b172a588e54ab619854d073f555b5\snakeyaml-1.19.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.fasterxml.jackson.datatype\jackson-datatype-jdk8\2.9.6\456895fc91bf7180b216fead220373e6278230c9\jackson-datatype-jdk8-2.9.6.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.hamcrest\hamcrest-core\1.3\42a25dc3219429f0e5d060061f71acb49bf010a0\hamcrest-core-1.3.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.fasterxml.jackson.datatype\jackson-datatype-jsr310\2.9.6\ea54f6193d224e5e5732bbd4262327eb465397c2\jackson-datatype-jsr310-2.9.6.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.skyscreamer\jsonassert\1.5.0\6c9d5fe2f59da598d9aefc1cfc6528ff3cf32df3\jsonassert-1.5.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.fasterxml.jackson.module\jackson-module-parameter-names\2.9.6\129acd77a4b6ee30d62d3a0899b1344c8ec2bff8\jackson-module-parameter-names-2.9.6.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-test\5.0.8.RELEASE\5782619373bd7e7b7d9106203c317b04bb613ebb\spring-test-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.fasterxml.jackson.core\jackson-databind\2.9.6\cfa4f316351a91bfd95cb0644c6a2c95f52db1fc\jackson-databind-2.9.6.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.apache.tomcat.embed\tomcat-embed-websocket\8.5.32\ea5302e378f1449d4e5dda79e8d810c1e7931f91\tomcat-embed-websocket-8.5.32.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.apache.tomcat.embed\tomcat-embed-core\8.5.32\6bc6896200146010cc4666bdc6b9b0cbb453ee22\tomcat-embed-core-8.5.32.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.apache.tomcat.embed\tomcat-embed-el\8.5.32\e4fd0ee015d83fa1c5ec93ff1d05bdaf9a4480c5\tomcat-embed-el-8.5.32.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\javax.validation\validation-api\2.0.1.Final\cb855558e6271b1b32e716d24cb85c7f583ce09e\validation-api-2.0.1.Final.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.hibernate.common\hibernate-commons-annotations\5.0.1.Final\71e1cff3fcb20d3b3af4f3363c3ddb24d33c6879\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.jboss.logging\jboss-logging\3.3.2.Final\3789d00e859632e6c6206adc0c71625559e6e3b0\jboss-logging-3.3.2.Final.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.aspectj\aspectjweaver\1.8.13\ad94df2a28d658a40dc27bbaff6a1ce5fbf04e9b\aspectjweaver-1.8.13.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.hibernate.javax.persistence\hibernate-jpa-2.1-api\1.0.0.Final\5e731d961297e5a07290bfaf3db1fbc8bbbf405a\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.javassist\javassist\3.22.0-GA\3e83394258ae2089be7219b971ec21a8288528ad\javassist-3.22.0-GA.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\antlr\antlr\2.7.7\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\antlr-2.7.7.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.xmlunit\xmlunit-core\2.5.1\4ffdb346572a7356f7521cd3119ce5287d2e339d\xmlunit-core-2.5.1.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.jboss\jandex\2.0.3.Final\bfc4d6257dbff7a33a357f0de116be6ff951d849\jandex-2.0.3.Final.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.junit.platform\junit-platform-engine\1.1.0\2596bd4d909e7ea8d029272db4338075445d731b\junit-platform-engine-1.1.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.junit.jupiter\junit-jupiter-api\5.1.0\370218fbc7ce9cf0600c4b5db400bccdf0c01a48\junit-jupiter-api-5.1.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\dom4j\dom4j\1.6.1\5d3ccc056b6f056dbf0dddfdf43894b9065a8f94\dom4j-1.6.1.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.junit.platform\junit-platform-commons\1.1.0\d6aa21029f9cedfb4cc8a9e9efc0bd97987205b8\junit-platform-commons-1.1.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.fasterxml.jackson.core\jackson-annotations\2.9.5\9056ec9db21c57d43219a84bb18c129ae51c6a5d\jackson-annotations-2.9.5.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.springframework\spring-jcl\5.0.8.RELEASE\a1fa8fb560fb252321776e16bc9ac8201af4ef5e\spring-jcl-5.0.8.RELEASE.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.apiguardian\apiguardian-api\1.0.0\3ef5276905e36f4d8055fe3cb0bdcc7503ffc85d\apiguardian-api-1.0.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.fasterxml.jackson.core\jackson-core\2.9.6\4e393793c37c77e042ccc7be5a914ae39251b365\jackson-core-2.9.6.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.apache.logging.log4j\log4j-api\2.10.0\fec5797a55b786184a537abd39c3fa1449d752d6\log4j-api-2.10.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.apache.tomcat\tomcat-annotations-api\8.5.32\bc805a49362036d2705bbe051053f11120869fd\tomcat-annotations-api-8.5.32.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\net.minidev\json-smart\2.3\7396407491352ce4fa30de92efb158adb76b5b\json-smart-2.3.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\com.vaadin.external.google\android-json\0.0.20131108.vaadin1\fa26d351fe62a6a17f5cda1287c1c6110dec413f\android-json-0.0.20131108.vaadin1.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.opentest4j\opentest4j\1.0.0\6f09c598e9ff64bf0ce2fa7e7de49a99ba83c0b4\opentest4j-1.0.0.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\net.minidev\accessors-smart\1.2\c592b500269bfde36096641b01238a8350f8aa31\accessors-smart-1.2.jar;C:\Users\WebSter\.gradle\caches\modules-2\files-2.1\org.ow2.asm\asm\5.0.4\da08b8cce7bbf903602a25a3a163ae252435795\asm-5.0.4.jar&amp;quot; com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 @w@C:\Users\WebSter\AppData\Local\Temp\idea_working_dirs_junit.tmp @C:\Users\WebSter\AppData\Local\Temp\idea_junit.tmp -socket55762
</output>
        <output type="stdout">---- IntelliJ IDEA coverage runner ---- 
sampling ...
include patterns:
exclude patterns:2018-12-21 03:07:06.894  INFO 9756 --- [       Thread-6] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@17541204: startup date [Fri Dec 21 03:06:54 MSK 2018]; root of context hierarchy
2018-12-21 03:07:06.896  INFO 9756 --- [       Thread-8] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7af2ee23: startup date [Fri Dec 21 03:06:55 MSK 2018]; root of context hierarchy
2018-12-21 03:07:06.896  INFO 9756 --- [      Thread-26] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5db6083b: startup date [Fri Dec 21 03:07:06 MSK 2018]; root of context hierarchy
2018-12-21 03:07:06.897  INFO 9756 --- [       Thread-3] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5c87bfe2: startup date [Fri Dec 21 03:06:45 MSK 2018]; root of context hierarchy
2018-12-21 03:07:06.900  INFO 9756 --- [       Thread-3] kspt.bank.domain.Vault                   : Closing the Vault...
2018-12-21 03:07:06.918  INFO 9756 --- [       Thread-3] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit &amp;#39;default&amp;#39;
2018-12-21 03:07:06.921  INFO 9756 --- [       Thread-3] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down&amp;#39;
2018-12-21 03:07:06.922  INFO 9756 --- [       Thread-5] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7187078a: startup date [Fri Dec 21 03:06:53 MSK 2018]; root of context hierarchy
2018-12-21 03:07:06.922  WARN 9756 --- [ngKeepersPool-0] kspt.bank.domain.Vault                   : Vault was interrupted
2018-12-21 03:07:06.922  WARN 9756 --- [ngKeepersPool-5] kspt.bank.domain.Vault                   : Vault was interrupted
2018-12-21 03:07:06.922  WARN 9756 --- [ngKeepersPool-8] kspt.bank.domain.Vault                   : Vault was interrupted
2018-12-21 03:07:06.922  WARN 9756 --- [ngKeepersPool-2] kspt.bank.domain.Vault                   : Vault was interrupted
2018-12-21 03:07:06.922  WARN 9756 --- [ngKeepersPool-4] kspt.bank.domain.Vault                   : Vault was interrupted
2018-12-21 03:07:06.922  WARN 9756 --- [ngKeepersPool-6] kspt.bank.domain.Vault                   : Vault was interrupted
2018-12-21 03:07:06.922  WARN 9756 --- [ngKeepersPool-3] kspt.bank.domain.Vault                   : Vault was interrupted
2018-12-21 03:07:06.922  WARN 9756 --- [ngKeepersPool-7] kspt.bank.domain.Vault                   : Vault was interrupted
2018-12-21 03:07:06.922  WARN 9756 --- [ngKeepersPool-1] kspt.bank.domain.Vault                   : Vault was interrupted
Hibernate: drop table cell if exists
2018-12-21 03:07:06.924  INFO 9756 --- [       Thread-7] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7004cd44: startup date [Fri Dec 21 03:06:55 MSK 2018]; root of context hierarchy
2018-12-21 03:07:06.931  INFO 9756 --- [      Thread-24] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@534c3b9d: startup date [Fri Dec 21 03:07:01 MSK 2018]; root of context hierarchy
2018-12-21 03:07:06.960  INFO 9756 --- [       Thread-7] kspt.bank.domain.Vault                   : Closing the Vault...
2018-12-21 03:07:06.961  INFO 9756 --- [      Thread-26] kspt.bank.domain.Vault                   : Closing the Vault...
2018-12-21 03:07:06.962  INFO 9756 --- [      Thread-26] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit &amp;#39;default&amp;#39;
2018-12-21 03:07:06.963  INFO 9756 --- [      Thread-26] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down&amp;#39;
Hibernate: drop table cell if exists
2018-12-21 03:07:06.968  INFO 9756 --- [       Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit &amp;#39;default&amp;#39;
2018-12-21 03:07:06.968  INFO 9756 --- [       Thread-5] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down&amp;#39;
Hibernate: drop table cell if exists
2018-12-21 03:07:06.969  INFO 9756 --- [       Thread-6] kspt.bank.domain.Vault                   : Closing the Vault...
2018-12-21 03:07:06.970  WARN 9756 --- [ngKeepersPool-2] kspt.bank.domain.Vault                   : Vault was interrupted
2018-12-21 03:07:06.970  WARN 9756 --- [ngKeepersPool-1] kspt.bank.domain.Vault                   : Vault was interrupted
2018-12-21 03:07:06.970  WARN 9756 --- [ngKeepersPool-0] kspt.bank.domain.Vault                   : Vault was interrupted
2018-12-21 03:07:07.219  INFO 9756 --- [      Thread-24] kspt.bank.domain.Vault                   : Closing the Vault...
2018-12-21 03:07:07.221  INFO 9756 --- [      Thread-24] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit &amp;#39;default&amp;#39;
2018-12-21 03:07:07.223  INFO 9756 --- [      Thread-24] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down&amp;#39;
Hibernate: drop table cell if exists
2018-12-21 03:07:07.262  INFO 9756 --- [       Thread-8] kspt.bank.domain.Vault                   : Closing the Vault...
Hibernate: drop table cellapplication if exists
Hibernate: drop table client if exists
Hibernate: drop table precious if exists
Hibernate: drop table cellapplication if exists
Hibernate: drop table client if exists
Hibernate: drop table cellapplication if exists
Hibernate: drop table client if exists
Hibernate: drop table precious if exists
Hibernate: drop table cellapplication if exists
Hibernate: drop table precious if exists
Hibernate: drop table client if exists
Hibernate: drop table precious if exists
</output>
        <output type="stdout">Process finished with exit code 0
</output>
    </root>
    <suite duration="937" locationUrl="java:suite://kspt.bank.ApplyForCellTest" name="ApplyForCellTest" status="passed">
        <suite duration="937" locationUrl="java:test://kspt.bank.ApplyForCellTest.testBusinessProcess" name="testBusinessProcess(CellSize, Integer)" metainfo="kspt.bank.enums.CellSize, java.lang.Integer" status="passed">
            <test duration="616" locationUrl="java:test://kspt.bank.ApplyForCellTest.testBusinessProcess" name="[1] SMALL, 2" metainfo="kspt.bank.enums.CellSize, java.lang.Integer" status="passed">
                <output type="stdout">2018-12-21 03:06:52.029  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@35432107, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@44392e64]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cellapplication (id, cell_id, period_d, period_m, period_y, client_id, status) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select cellapplic0_.id as id1_1_, cellapplic0_.cell_id as cell_id6_1_, cellapplic0_.period_d as period_d2_1_, cellapplic0_.period_m as period_m3_1_, cellapplic0_.period_y as period_y4_1_, cellapplic0_.client_id as client_i7_1_, cellapplic0_.status as status5_1_ from cellapplication cellapplic0_ where cellapplic0_.client_id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
2018-12-21 03:06:52.581  INFO 9756 --- [ngKeepersPool-0] kspt.bank.domain.Vault                   : Cell 0 is pending until 03:36:52.581
Hibernate: update cellapplication set cell_id=?, period_d=?, period_m=?, period_y=?, client_id=?, status=? where id=?
Hibernate: update cell set expired=?, lease_begin=?, lease_end=?, client_id=?, precious_id=?, real_id=?, pending=?, size=? where id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
2018-12-21 03:06:52.625  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@35432107, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
            <test duration="40" locationUrl="java:test://kspt.bank.ApplyForCellTest.testBusinessProcess" name="[2] SMALL, 30" metainfo="kspt.bank.enums.CellSize, java.lang.Integer" status="passed">
                <output type="stdout">2018-12-21 03:06:52.653  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@4ef28dc4, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@44392e64]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cellapplication (id, cell_id, period_d, period_m, period_y, client_id, status) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select cellapplic0_.id as id1_1_, cellapplic0_.cell_id as cell_id6_1_, cellapplic0_.period_d as period_d2_1_, cellapplic0_.period_m as period_m3_1_, cellapplic0_.period_y as period_y4_1_, cellapplic0_.client_id as client_i7_1_, cellapplic0_.status as status5_1_ from cellapplication cellapplic0_ where cellapplic0_.client_id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: update cellapplication set cell_id=?, period_d=?, period_m=?, period_y=?, client_id=?, status=? where id=?
Hibernate: update cell set expired=?, lease_begin=?, lease_end=?, client_id=?, precious_id=?, real_id=?, pending=?, size=? where id=?
2018-12-21 03:06:52.678  INFO 9756 --- [ngKeepersPool-1] kspt.bank.domain.Vault                   : Cell 1 is pending until 03:36:52.678
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
2018-12-21 03:06:52.684  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@4ef28dc4, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
            <test duration="56" locationUrl="java:test://kspt.bank.ApplyForCellTest.testBusinessProcess" name="[3] SMALL, 45" metainfo="kspt.bank.enums.CellSize, java.lang.Integer" status="passed">
                <output type="stdout">2018-12-21 03:06:52.698  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@74797b90, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@44392e64]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cellapplication (id, cell_id, period_d, period_m, period_y, client_id, status) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select cellapplic0_.id as id1_1_, cellapplic0_.cell_id as cell_id6_1_, cellapplic0_.period_d as period_d2_1_, cellapplic0_.period_m as period_m3_1_, cellapplic0_.period_y as period_y4_1_, cellapplic0_.client_id as client_i7_1_, cellapplic0_.status as status5_1_ from cellapplication cellapplic0_ where cellapplic0_.client_id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: update cellapplication set cell_id=?, period_d=?, period_m=?, period_y=?, client_id=?, status=? where id=?
Hibernate: update cell set expired=?, lease_begin=?, lease_end=?, client_id=?, precious_id=?, real_id=?, pending=?, size=? where id=?
2018-12-21 03:06:52.738  INFO 9756 --- [ngKeepersPool-2] kspt.bank.domain.Vault                   : Cell 2 is pending until 03:36:52.738
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
2018-12-21 03:06:52.748  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@74797b90, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
            <test duration="43" locationUrl="java:test://kspt.bank.ApplyForCellTest.testBusinessProcess" name="[4] MEDIUM, 2" metainfo="kspt.bank.enums.CellSize, java.lang.Integer" status="passed">
                <output type="stdout">2018-12-21 03:06:52.757  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@7320750c, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@44392e64]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cellapplication (id, cell_id, period_d, period_m, period_y, client_id, status) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select cellapplic0_.id as id1_1_, cellapplic0_.cell_id as cell_id6_1_, cellapplic0_.period_d as period_d2_1_, cellapplic0_.period_m as period_m3_1_, cellapplic0_.period_y as period_y4_1_, cellapplic0_.client_id as client_i7_1_, cellapplic0_.status as status5_1_ from cellapplication cellapplic0_ where cellapplic0_.client_id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
2018-12-21 03:06:52.784  INFO 9756 --- [ngKeepersPool-3] kspt.bank.domain.Vault                   : Cell 20 is pending until 03:36:52.784
Hibernate: update cellapplication set cell_id=?, period_d=?, period_m=?, period_y=?, client_id=?, status=? where id=?
Hibernate: update cell set expired=?, lease_begin=?, lease_end=?, client_id=?, precious_id=?, real_id=?, pending=?, size=? where id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
2018-12-21 03:06:52.792  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@7320750c, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
            <test duration="33" locationUrl="java:test://kspt.bank.ApplyForCellTest.testBusinessProcess" name="[5] MEDIUM, 30" metainfo="kspt.bank.enums.CellSize, java.lang.Integer" status="passed">
                <output type="stdout">2018-12-21 03:06:52.798  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@3b780b5c, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@44392e64]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cellapplication (id, cell_id, period_d, period_m, period_y, client_id, status) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select cellapplic0_.id as id1_1_, cellapplic0_.cell_id as cell_id6_1_, cellapplic0_.period_d as period_d2_1_, cellapplic0_.period_m as period_m3_1_, cellapplic0_.period_y as period_y4_1_, cellapplic0_.client_id as client_i7_1_, cellapplic0_.status as status5_1_ from cellapplication cellapplic0_ where cellapplic0_.client_id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
2018-12-21 03:06:52.816  INFO 9756 --- [ngKeepersPool-4] kspt.bank.domain.Vault                   : Cell 21 is pending until 03:36:52.816
Hibernate: update cellapplication set cell_id=?, period_d=?, period_m=?, period_y=?, client_id=?, status=? where id=?
Hibernate: update cell set expired=?, lease_begin=?, lease_end=?, client_id=?, precious_id=?, real_id=?, pending=?, size=? where id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
2018-12-21 03:06:52.823  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@3b780b5c, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
            <test duration="28" locationUrl="java:test://kspt.bank.ApplyForCellTest.testBusinessProcess" name="[6] MEDIUM, 45" metainfo="kspt.bank.enums.CellSize, java.lang.Integer" status="passed">
                <output type="stdout">2018-12-21 03:06:52.833  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@66d6e50b, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@44392e64]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cellapplication (id, cell_id, period_d, period_m, period_y, client_id, status) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select cellapplic0_.id as id1_1_, cellapplic0_.cell_id as cell_id6_1_, cellapplic0_.period_d as period_d2_1_, cellapplic0_.period_m as period_m3_1_, cellapplic0_.period_y as period_y4_1_, cellapplic0_.client_id as client_i7_1_, cellapplic0_.status as status5_1_ from cellapplication cellapplic0_ where cellapplic0_.client_id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
2018-12-21 03:06:52.848  INFO 9756 --- [ngKeepersPool-5] kspt.bank.domain.Vault                   : Cell 22 is pending until 03:36:52.848
Hibernate: update cellapplication set cell_id=?, period_d=?, period_m=?, period_y=?, client_id=?, status=? where id=?
Hibernate: update cell set expired=?, lease_begin=?, lease_end=?, client_id=?, precious_id=?, real_id=?, pending=?, size=? where id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
2018-12-21 03:06:52.855  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@66d6e50b, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
            <test duration="57" locationUrl="java:test://kspt.bank.ApplyForCellTest.testBusinessProcess" name="[7] BIG, 2" metainfo="kspt.bank.enums.CellSize, java.lang.Integer" status="passed">
                <output type="stdout">2018-12-21 03:06:52.862  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@3e5cbcfe, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@44392e64]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cellapplication (id, cell_id, period_d, period_m, period_y, client_id, status) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select cellapplic0_.id as id1_1_, cellapplic0_.cell_id as cell_id6_1_, cellapplic0_.period_d as period_d2_1_, cellapplic0_.period_m as period_m3_1_, cellapplic0_.period_y as period_y4_1_, cellapplic0_.client_id as client_i7_1_, cellapplic0_.status as status5_1_ from cellapplication cellapplic0_ where cellapplic0_.client_id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: update cellapplication set cell_id=?, period_d=?, period_m=?, period_y=?, client_id=?, status=? where id=?
Hibernate: update cell set expired=?, lease_begin=?, lease_end=?, client_id=?, precious_id=?, real_id=?, pending=?, size=? where id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
2018-12-21 03:06:52.906  INFO 9756 --- [ngKeepersPool-6] kspt.bank.domain.Vault                   : Cell 30 is pending until 03:36:52.906
2018-12-21 03:06:52.912  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@3e5cbcfe, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
            <test duration="34" locationUrl="java:test://kspt.bank.ApplyForCellTest.testBusinessProcess" name="[8] BIG, 30" metainfo="kspt.bank.enums.CellSize, java.lang.Integer" status="passed">
                <output type="stdout">2018-12-21 03:06:52.921  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@25b8f9d2, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@44392e64]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cellapplication (id, cell_id, period_d, period_m, period_y, client_id, status) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select cellapplic0_.id as id1_1_, cellapplic0_.cell_id as cell_id6_1_, cellapplic0_.period_d as period_d2_1_, cellapplic0_.period_m as period_m3_1_, cellapplic0_.period_y as period_y4_1_, cellapplic0_.client_id as client_i7_1_, cellapplic0_.status as status5_1_ from cellapplication cellapplic0_ where cellapplic0_.client_id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
2018-12-21 03:06:52.941  INFO 9756 --- [ngKeepersPool-7] kspt.bank.domain.Vault                   : Cell 31 is pending until 03:36:52.940
Hibernate: update cellapplication set cell_id=?, period_d=?, period_m=?, period_y=?, client_id=?, status=? where id=?
Hibernate: update cell set expired=?, lease_begin=?, lease_end=?, client_id=?, precious_id=?, real_id=?, pending=?, size=? where id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
2018-12-21 03:06:52.953  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@25b8f9d2, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
            <test duration="30" locationUrl="java:test://kspt.bank.ApplyForCellTest.testBusinessProcess" name="[9] BIG, 45" metainfo="kspt.bank.enums.CellSize, java.lang.Integer" status="passed">
                <output type="stdout">2018-12-21 03:06:52.957  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@70f76276, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@44392e64]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cellapplication (id, cell_id, period_d, period_m, period_y, client_id, status) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
Hibernate: select cellapplic0_.id as id1_1_, cellapplic0_.cell_id as cell_id6_1_, cellapplic0_.period_d as period_d2_1_, cellapplic0_.period_m as period_m3_1_, cellapplic0_.period_y as period_y4_1_, cellapplic0_.client_id as client_i7_1_, cellapplic0_.status as status5_1_ from cellapplication cellapplic0_ where cellapplic0_.client_id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
2018-12-21 03:06:52.975  INFO 9756 --- [ngKeepersPool-8] kspt.bank.domain.Vault                   : Cell 32 is pending until 03:36:52.975
Hibernate: update cellapplication set cell_id=?, period_d=?, period_m=?, period_y=?, client_id=?, status=? where id=?
Hibernate: update cell set expired=?, lease_begin=?, lease_end=?, client_id=?, precious_id=?, real_id=?, pending=?, size=? where id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
2018-12-21 03:06:52.982  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@b4711e2 testClass = ApplyForCellTest, testInstance = kspt.bank.ApplyForCellTest@70f76276, testMethod = testBusinessProcess@ApplyForCellTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fa1cab1 testClass = ApplyForCellTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@70f02c32 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellApplicationInteractor, class kspt.bank.ApplyForCellTest$Config]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
        </suite>
    </suite>
    <suite duration="49" locationUrl="java:suite://kspt.bank.dao.JpaApplicationsRepositoryTest" name="JpaApplicationsRepositoryTest" status="passed">
        <test duration="28" locationUrl="java:test://kspt.bank.dao.JpaApplicationsRepositoryTest.testFind_Existent" name="testFind_Existent()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:53.951  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@22e1a1dc testClass = JpaApplicationsRepositoryTest, testInstance = kspt.bank.dao.JpaApplicationsRepositoryTest@14b4d90b, testMethod = testFind_Existent@JpaApplicationsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@638341b0 testClass = JpaApplicationsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@7962c1d5 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cellapplication (id, cell_id, period_d, period_m, period_y, client_id, status) values (null, ?, ?, ?, ?, ?, ?)
2018-12-21 03:06:53.975  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@22e1a1dc testClass = JpaApplicationsRepositoryTest, testInstance = kspt.bank.dao.JpaApplicationsRepositoryTest@14b4d90b, testMethod = testFind_Existent@JpaApplicationsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@638341b0 testClass = JpaApplicationsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@7962c1d5 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="21" locationUrl="java:test://kspt.bank.dao.JpaApplicationsRepositoryTest.testFind_NonExistent" name="testFind_NonExistent()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:53.979  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@22e1a1dc testClass = JpaApplicationsRepositoryTest, testInstance = kspt.bank.dao.JpaApplicationsRepositoryTest@53b7f08, testMethod = testFind_NonExistent@JpaApplicationsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@638341b0 testClass = JpaApplicationsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@7962c1d5 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cellapplication (id, cell_id, period_d, period_m, period_y, client_id, status) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: select cellapplic0_.id as id1_1_0_, cellapplic0_.cell_id as cell_id6_1_0_, cellapplic0_.period_d as period_d2_1_0_, cellapplic0_.period_m as period_m3_1_0_, cellapplic0_.period_y as period_y4_1_0_, cellapplic0_.client_id as client_i7_1_0_, cellapplic0_.status as status5_1_0_, cell1_.id as id1_0_1_, cell1_.expired as expired2_0_1_, cell1_.lease_begin as lease_be3_0_1_, cell1_.lease_end as lease_en4_0_1_, cell1_.client_id as client_i8_0_1_, cell1_.precious_id as precious9_0_1_, cell1_.real_id as real_id5_0_1_, cell1_.pending as pending6_0_1_, cell1_.size as size7_0_1_, client2_.id as id1_2_2_, client2_.email as email2_2_2_, client2_.birth_date as birth_da3_2_2_, client2_.first_name as first_na4_2_2_, client2_.last_name as last_nam5_2_2_, client2_.patronymic as patronym6_2_2_, client2_.serial as serial7_2_2_, client2_.phone as phone8_2_2_, precious3_.id as id1_3_3_, precious3_.name as name2_3_3_, precious3_.volume as volume3_3_3_, client4_.id as id1_2_4_, client4_.email as email2_2_4_, client4_.birth_date as birth_da3_2_4_, client4_.first_name as first_na4_2_4_, client4_.last_name as last_nam5_2_4_, client4_.patronymic as patronym6_2_4_, client4_.serial as serial7_2_4_, client4_.phone as phone8_2_4_ from cellapplication cellapplic0_ left outer join cell cell1_ on cellapplic0_.cell_id=cell1_.id left outer join client client2_ on cell1_.client_id=client2_.id left outer join precious precious3_ on cell1_.precious_id=precious3_.id inner join client client4_ on cellapplic0_.client_id=client4_.id where cellapplic0_.id=?
2018-12-21 03:06:53.996  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@22e1a1dc testClass = JpaApplicationsRepositoryTest, testInstance = kspt.bank.dao.JpaApplicationsRepositoryTest@53b7f08, testMethod = testFind_NonExistent@JpaApplicationsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@638341b0 testClass = JpaApplicationsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@7962c1d5 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
    </suite>
    <suite duration="179" locationUrl="java:suite://kspt.bank.dao.JpaCellsRepositoryTest" name="JpaCellsRepositoryTest" status="passed">
        <test duration="23" locationUrl="java:test://kspt.bank.dao.JpaCellsRepositoryTest.testFindAllCells" name="testFindAllCells()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.031  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@61555218, testMethod = testFindAllCells@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select cell0_.id as id1_0_, cell0_.expired as expired2_0_, cell0_.lease_begin as lease_be3_0_, cell0_.lease_end as lease_en4_0_, cell0_.client_id as client_i8_0_, cell0_.precious_id as precious9_0_, cell0_.real_id as real_id5_0_, cell0_.pending as pending6_0_, cell0_.size as size7_0_ from cell cell0_
2018-12-21 03:06:54.052  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@61555218, testMethod = testFindAllCells@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <suite duration="64" locationUrl="java:test://kspt.bank.dao.JpaCellsRepositoryTest.testSave" name="testSave(CellSize)" metainfo="kspt.bank.enums.CellSize" status="passed">
            <test duration="32" locationUrl="java:test://kspt.bank.dao.JpaCellsRepositoryTest.testSave" name="[1] SMALL" metainfo="kspt.bank.enums.CellSize" status="passed">
                <output type="stdout">2018-12-21 03:06:54.073  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@4724b2c1, testMethod = testSave@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
2018-12-21 03:06:54.093  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@4724b2c1, testMethod = testSave@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
            <test duration="15" locationUrl="java:test://kspt.bank.dao.JpaCellsRepositoryTest.testSave" name="[2] MEDIUM" metainfo="kspt.bank.enums.CellSize" status="passed">
                <output type="stdout">2018-12-21 03:06:54.096  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@509e4902, testMethod = testSave@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
2018-12-21 03:06:54.110  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@509e4902, testMethod = testSave@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
            <test duration="17" locationUrl="java:test://kspt.bank.dao.JpaCellsRepositoryTest.testSave" name="[3] BIG" metainfo="kspt.bank.enums.CellSize" status="passed">
                <output type="stdout">2018-12-21 03:06:54.113  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@7b364f47, testMethod = testSave@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
2018-12-21 03:06:54.128  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@7b364f47, testMethod = testSave@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
        </suite>
        <test duration="18" locationUrl="java:test://kspt.bank.dao.JpaCellsRepositoryTest.testFindAllPendingCells" name="testFindAllPendingCells()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.130  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@790f4933, testMethod = testFindAllPendingCells@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select cell0_.id as id1_0_, cell0_.expired as expired2_0_, cell0_.lease_begin as lease_be3_0_, cell0_.lease_end as lease_en4_0_, cell0_.client_id as client_i8_0_, cell0_.precious_id as precious9_0_, cell0_.real_id as real_id5_0_, cell0_.pending as pending6_0_, cell0_.size as size7_0_ from cell cell0_ where cell0_.pending=1
2018-12-21 03:06:54.147  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@790f4933, testMethod = testFindAllPendingCells@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="17" locationUrl="java:test://kspt.bank.dao.JpaCellsRepositoryTest.testFindCell_Existent" name="testFindCell_Existent()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.150  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@63e648a0, testMethod = testFindCell_Existent@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select cell0_.id as id1_0_, cell0_.expired as expired2_0_, cell0_.lease_begin as lease_be3_0_, cell0_.lease_end as lease_en4_0_, cell0_.client_id as client_i8_0_, cell0_.precious_id as precious9_0_, cell0_.real_id as real_id5_0_, cell0_.pending as pending6_0_, cell0_.size as size7_0_ from cell cell0_ where real_id=?
2018-12-21 03:06:54.165  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@63e648a0, testMethod = testFindCell_Existent@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="40" locationUrl="java:test://kspt.bank.dao.JpaCellsRepositoryTest.testIsPending" name="testIsPending()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.167  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@2cd877d3, testMethod = testIsPending@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
2018-12-21 03:06:54.205  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@2cd877d3, testMethod = testIsPending@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="17" locationUrl="java:test://kspt.bank.dao.JpaCellsRepositoryTest.testFindCell_NonExistent" name="testFindCell_NonExistent()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.211  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@662061e3, testMethod = testFindCell_NonExistent@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into cell (id, expired, lease_begin, lease_end, client_id, precious_id, real_id, pending, size) values (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select cell0_.id as id1_0_, cell0_.expired as expired2_0_, cell0_.lease_begin as lease_be3_0_, cell0_.lease_end as lease_en4_0_, cell0_.client_id as client_i8_0_, cell0_.precious_id as precious9_0_, cell0_.real_id as real_id5_0_, cell0_.pending as pending6_0_, cell0_.size as size7_0_ from cell cell0_ where real_id=?
2018-12-21 03:06:54.224  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@20a18cc9 testClass = JpaCellsRepositoryTest, testInstance = kspt.bank.dao.JpaCellsRepositoryTest@662061e3, testMethod = testFindCell_NonExistent@JpaCellsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fcf73b9 testClass = JpaCellsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@3b80bb63 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
    </suite>
    <suite duration="191" locationUrl="java:suite://kspt.bank.dao.JpaClientsRepositoryTest" name="JpaClientsRepositoryTest" status="passed">
        <test duration="19" locationUrl="java:test://kspt.bank.dao.JpaClientsRepositoryTest.testFind_Existent" name="testFind_Existent()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.244  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@2ce3d95a, testMethod = testFind_Existent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
2018-12-21 03:06:54.262  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@2ce3d95a, testMethod = testFind_Existent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="31" locationUrl="java:test://kspt.bank.dao.JpaClientsRepositoryTest.testContainsClientWithSerial_NonExistent" name="testContainsClientWithSerial_NonExistent()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.267  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@6bcfb561, testMethod = testContainsClientWithSerial_NonExistent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
2018-12-21 03:06:54.292  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@6bcfb561, testMethod = testContainsClientWithSerial_NonExistent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="38" locationUrl="java:test://kspt.bank.dao.JpaClientsRepositoryTest.testAdd" name="testAdd()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.315  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@73bcd9b4, testMethod = testAdd@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_
2018-12-21 03:06:54.336  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@73bcd9b4, testMethod = testAdd@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="16" locationUrl="java:test://kspt.bank.dao.JpaClientsRepositoryTest.testGetClientWith_NonExistent" name="testGetClientWith_NonExistent()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.343  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@1b984ba5, testMethod = testGetClientWith_NonExistent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
2018-12-21 03:06:54.353  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@1b984ba5, testMethod = testGetClientWith_NonExistent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="15" locationUrl="java:test://kspt.bank.dao.JpaClientsRepositoryTest.testContainsClientWith_NonExistent" name="testContainsClientWith_NonExistent()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.356  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@7683ea43, testMethod = testContainsClientWith_NonExistent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
2018-12-21 03:06:54.370  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@7683ea43, testMethod = testContainsClientWith_NonExistent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="16" locationUrl="java:test://kspt.bank.dao.JpaClientsRepositoryTest.testContainsClientWithSerial_Existent" name="testContainsClientWithSerial_Existent()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.372  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@4cd9ee2c, testMethod = testContainsClientWithSerial_Existent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
2018-12-21 03:06:54.386  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@4cd9ee2c, testMethod = testContainsClientWithSerial_Existent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="21" locationUrl="java:test://kspt.bank.dao.JpaClientsRepositoryTest.testFind_NonExistent" name="testFind_NonExistent()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.389  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@21be80f6, testMethod = testFind_NonExistent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.birth_date as birth_da3_2_0_, client0_.first_name as first_na4_2_0_, client0_.last_name as last_nam5_2_0_, client0_.patronymic as patronym6_2_0_, client0_.serial as serial7_2_0_, client0_.phone as phone8_2_0_ from client client0_ where client0_.id=?
2018-12-21 03:06:54.403  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@21be80f6, testMethod = testFind_NonExistent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="14" locationUrl="java:test://kspt.bank.dao.JpaClientsRepositoryTest.testContainsClientWith_Existent" name="testContainsClientWith_Existent()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.411  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@4678ec43, testMethod = testContainsClientWith_Existent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
2018-12-21 03:06:54.423  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@4678ec43, testMethod = testContainsClientWith_Existent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="21" locationUrl="java:test://kspt.bank.dao.JpaClientsRepositoryTest.testGetClientWith_Existent" name="testGetClientWith_Existent()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:54.427  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@1c65ec63, testMethod = testGetClientWith_Existent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@51f009ef]; rollback [true]
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.birth_date as birth_da3_2_, client0_.first_name as first_na4_2_, client0_.last_name as last_nam5_2_, client0_.patronymic as patronym6_2_, client0_.serial as serial7_2_, client0_.phone as phone8_2_ from client client0_ where client0_.serial=?
2018-12-21 03:06:54.443  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@2823b7c5 testClass = JpaClientsRepositoryTest, testInstance = kspt.bank.dao.JpaClientsRepositoryTest@1c65ec63, testMethod = testGetClientWith_Existent@JpaClientsRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f6c6c70 testClass = JpaClientsRepositoryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.BankVaultCoreApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@75d95b67 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
    </suite>
    <suite duration="129" locationUrl="java:suite://kspt.bank.domain.CellApplicationInteractorTest" name="CellApplicationInteractorTest" status="passed">
        <test duration="7" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testCreateApplication_IncorrectSerial" name="testCreateApplication_IncorrectSerial()" metainfo="" status="passed"/>
        <test duration="37" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testCreateApplication_ExistingClient" name="testCreateApplication_ExistingClient()" metainfo="" status="passed"/>
        <test duration="10" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testApproveApplication" name="testApproveApplication()" metainfo="" status="passed"/>
        <test duration="15" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testCreateApplication_NewClient" name="testCreateApplication_NewClient()" metainfo="" status="passed"/>
        <test duration="3" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testCreateApplication_IncorrectLastName" name="testCreateApplication_IncorrectLastName()" metainfo="" status="passed"/>
        <suite duration="22" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testAcceptPayment" name="testAcceptPayment(PaymentMethod)" metainfo="kspt.bank.enums.PaymentMethod" status="passed">
            <test duration="9" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testAcceptPayment" name="[1] CASH" metainfo="kspt.bank.enums.PaymentMethod" status="passed"/>
            <test duration="13" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testAcceptPayment" name="[2] CARD" metainfo="kspt.bank.enums.PaymentMethod" status="passed"/>
        </suite>
        <test duration="13" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testCreateApplication_IncorrectFirstName" name="testCreateApplication_IncorrectFirstName()" metainfo="" status="passed"/>
        <suite duration="22" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testRequestCellOfSize" name="testRequestCellOfSize(CellSize, int)" metainfo="kspt.bank.enums.CellSize, int" status="passed">
            <test duration="10" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testRequestCellOfSize" name="[1] SMALL, 20" metainfo="kspt.bank.enums.CellSize, int" status="passed"/>
            <test duration="3" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testRequestCellOfSize" name="[2] MEDIUM, 10" metainfo="kspt.bank.enums.CellSize, int" status="passed">
                <output type="stdout">2018-12-21 03:06:55.427  INFO 9756 --- [ngKeepersPool-0] kspt.bank.domain.Vault                   : Cell 35 is pending until 03:36:55.427
2018-12-21 03:06:55.428  INFO 9756 --- [ngKeepersPool-1] kspt.bank.domain.Vault                   : Cell 55 is pending until 03:36:55.428
</output>
            </test>
            <test duration="9" locationUrl="java:test://kspt.bank.domain.CellApplicationInteractorTest.testRequestCellOfSize" name="[3] BIG, 5" metainfo="kspt.bank.enums.CellSize, int" status="passed">
                <output type="stdout">2018-12-21 03:06:55.437  INFO 9756 --- [ngKeepersPool-2] kspt.bank.domain.Vault                   : Cell 65 is pending until 03:36:55.437
</output>
            </test>
        </suite>
    </suite>
    <suite duration="133" locationUrl="java:suite://kspt.bank.domain.CellManipulationInteractorTest" name="CellManipulationInteractorTest" status="passed">
        <test duration="8" locationUrl="java:test://kspt.bank.domain.CellManipulationInteractorTest.testPutPrecious_TooBigPrecious" name="testPutPrecious_TooBigPrecious()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:06:55.660  WARN 9756 --- [           main] k.bank.domain.PutManipulationValidator   : Precious &amp;quot;Too Big Precious&amp;quot; with volume 100 is too big for cell 100 of size BIG
</output>
        </test>
        <test duration="5" locationUrl="java:test://kspt.bank.domain.CellManipulationInteractorTest.testPutPrecious" name="testPutPrecious()" metainfo="" status="passed"/>
        <test duration="12" locationUrl="java:test://kspt.bank.domain.CellManipulationInteractorTest.testNotifyAboutManipulation" name="testNotifyAboutManipulation()" metainfo="" status="passed"/>
        <test duration="33" locationUrl="java:test://kspt.bank.domain.CellManipulationInteractorTest.testPutPrecious_NotEmptyCell" name="testPutPrecious_NotEmptyCell()" metainfo="" status="passed"/>
        <test duration="2" locationUrl="java:test://kspt.bank.domain.CellManipulationInteractorTest.testGetPrecious" name="testGetPrecious()" metainfo="" status="passed"/>
        <test duration="9" locationUrl="java:test://kspt.bank.domain.CellManipulationInteractorTest.testCloseCell" name="testCloseCell()" metainfo="" status="passed"/>
        <test duration="12" locationUrl="java:test://kspt.bank.domain.CellManipulationInteractorTest.testOpenCell" name="testOpenCell()" metainfo="" status="passed"/>
        <test duration="52" locationUrl="java:test://kspt.bank.domain.CellManipulationInteractorTest.testGetClientsCells" name="testGetClientsCells()" metainfo="" status="passed"/>
    </suite>
    <suite duration="3032" locationUrl="java:suite://kspt.bank.domain.LeasingControlInteractorTest" name="LeasingControlInteractorTest" status="passed">
        <test duration="8" locationUrl="java:test://kspt.bank.domain.LeasingControlInteractorTest.testContinueLeasing" name="testContinueLeasing()" metainfo="" status="passed"/>
        <suite duration="2011" locationUrl="java:test://kspt.bank.domain.LeasingControlInteractorTest.testAcceptPayment" name="testAcceptPayment(PaymentMethod)" metainfo="kspt.bank.enums.PaymentMethod" status="passed">
            <test duration="1008" locationUrl="java:test://kspt.bank.domain.LeasingControlInteractorTest.testAcceptPayment" name="[1] CASH" metainfo="kspt.bank.enums.PaymentMethod" status="passed"/>
            <test duration="1003" locationUrl="java:test://kspt.bank.domain.LeasingControlInteractorTest.testAcceptPayment" name="[2] CARD" metainfo="kspt.bank.enums.PaymentMethod" status="passed"/>
        </suite>
        <test duration="1003" locationUrl="java:test://kspt.bank.domain.LeasingControlInteractorTest.testSendNotifications" name="testSendNotifications()" metainfo="" status="passed"/>
        <test duration="3" locationUrl="java:test://kspt.bank.domain.LeasingControlInteractorTest.testStopLeasing_EmptyCell" name="testStopLeasing_EmptyCell()" metainfo="" status="passed"/>
        <test duration="4" locationUrl="java:test://kspt.bank.domain.LeasingControlInteractorTest.testArrangeLeasingEnd" name="testArrangeLeasingEnd()" metainfo="" status="passed"/>
        <test duration="3" locationUrl="java:test://kspt.bank.domain.LeasingControlInteractorTest.testStopLeasing_NotEmptyCell" name="testStopLeasing_NotEmptyCell()" metainfo="" status="passed"/>
    </suite>
    <suite duration="1003" locationUrl="java:suite://kspt.bank.domain.LeasingControllerTest" name="LeasingControllerTest" status="passed">
        <test duration="1003" locationUrl="java:test://kspt.bank.domain.LeasingControllerTest.testLeasingExpiration" name="testLeasingExpiration()" metainfo="" status="passed"/>
    </suite>
    <suite duration="6" locationUrl="java:suite://kspt.bank.domain.PriceCalculatorTest" name="PriceCalculatorTest" status="passed">
        <suite duration="5" locationUrl="java:test://kspt.bank.domain.PriceCalculatorTest.testGetPriceFor" name="testGetPriceFor(CellSize, int)" metainfo="kspt.bank.enums.CellSize, int" status="passed">
            <test locationUrl="java:test://kspt.bank.domain.PriceCalculatorTest.testGetPriceFor" name="[1] SMALL, 2" metainfo="kspt.bank.enums.CellSize, int" status="passed"/>
            <test locationUrl="java:test://kspt.bank.domain.PriceCalculatorTest.testGetPriceFor" name="[2] SMALL, 30" metainfo="kspt.bank.enums.CellSize, int" status="passed"/>
            <test locationUrl="java:test://kspt.bank.domain.PriceCalculatorTest.testGetPriceFor" name="[3] SMALL, 45" metainfo="kspt.bank.enums.CellSize, int" status="passed"/>
            <test duration="2" locationUrl="java:test://kspt.bank.domain.PriceCalculatorTest.testGetPriceFor" name="[4] MEDIUM, 2" metainfo="kspt.bank.enums.CellSize, int" status="passed"/>
            <test locationUrl="java:test://kspt.bank.domain.PriceCalculatorTest.testGetPriceFor" name="[5] MEDIUM, 30" metainfo="kspt.bank.enums.CellSize, int" status="passed"/>
            <test locationUrl="java:test://kspt.bank.domain.PriceCalculatorTest.testGetPriceFor" name="[6] MEDIUM, 45" metainfo="kspt.bank.enums.CellSize, int" status="passed"/>
            <test duration="2" locationUrl="java:test://kspt.bank.domain.PriceCalculatorTest.testGetPriceFor" name="[7] BIG, 2" metainfo="kspt.bank.enums.CellSize, int" status="passed"/>
            <test locationUrl="java:test://kspt.bank.domain.PriceCalculatorTest.testGetPriceFor" name="[8] BIG, 30" metainfo="kspt.bank.enums.CellSize, int" status="passed"/>
            <test duration="1" locationUrl="java:test://kspt.bank.domain.PriceCalculatorTest.testGetPriceFor" name="[9] BIG, 45" metainfo="kspt.bank.enums.CellSize, int" status="passed"/>
        </suite>
        <test duration="1" locationUrl="java:test://kspt.bank.domain.PriceCalculatorTest.testDiscount" name="testDiscount()" metainfo="" status="passed"/>
    </suite>
    <suite duration="114" locationUrl="java:suite://kspt.bank.domain.VaultTest" name="VaultTest" status="passed">
        <test duration="5" locationUrl="java:test://kspt.bank.domain.VaultTest.testRequestCellOfSize_ShouldReturnTheSameCellTwice" name="testRequestCellOfSize_ShouldReturnTheSameCellTwice()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:07:00.153  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3af6d7a7: startup date [Fri Dec 21 03:06:59 MSK 2018]; root of context hierarchy
2018-12-21 03:07:00.154  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
        </test>
        <suite duration="26" locationUrl="java:test://kspt.bank.domain.VaultTest.testGetNumberOfAvailableCells_NoLeased" name="testGetNumberOfAvailableCells_NoLeased(CellSize, int)" metainfo="kspt.bank.enums.CellSize, int" status="passed">
            <test duration="13" locationUrl="java:test://kspt.bank.domain.VaultTest.testGetNumberOfAvailableCells_NoLeased" name="[1] SMALL, 20" metainfo="kspt.bank.enums.CellSize, int" status="passed">
                <output type="stdout">2018-12-21 03:07:00.293  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4509414e: startup date [Fri Dec 21 03:07:00 MSK 2018]; root of context hierarchy
2018-12-21 03:07:00.294  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
            </test>
            <test duration="9" locationUrl="java:test://kspt.bank.domain.VaultTest.testGetNumberOfAvailableCells_NoLeased" name="[2] MEDIUM, 10" metainfo="kspt.bank.enums.CellSize, int" status="passed">
                <output type="stdout">2018-12-21 03:07:00.414  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@24be6e34: startup date [Fri Dec 21 03:07:00 MSK 2018]; root of context hierarchy
2018-12-21 03:07:00.417  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
            </test>
            <test duration="4" locationUrl="java:test://kspt.bank.domain.VaultTest.testGetNumberOfAvailableCells_NoLeased" name="[3] BIG, 5" metainfo="kspt.bank.enums.CellSize, int" status="passed">
                <output type="stdout">2018-12-21 03:07:00.574  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1f591b2e: startup date [Fri Dec 21 03:07:00 MSK 2018]; root of context hierarchy
2018-12-21 03:07:00.574  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
            </test>
        </suite>
        <test duration="7" locationUrl="java:test://kspt.bank.domain.VaultTest.testRequestCellOfSize_ShouldReturnTwoDifferentCells" name="testRequestCellOfSize_ShouldReturnTwoDifferentCells()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:07:00.704  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@481eb705: startup date [Fri Dec 21 03:07:00 MSK 2018]; root of context hierarchy
2018-12-21 03:07:00.707  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
        </test>
        <suite duration="36" locationUrl="java:test://kspt.bank.domain.VaultTest.testRequestCellOfSize_ShouldReturnNull" name="testRequestCellOfSize_ShouldReturnNull(CellSize, int)" metainfo="kspt.bank.enums.CellSize, int" status="passed">
            <test duration="12" locationUrl="java:test://kspt.bank.domain.VaultTest.testRequestCellOfSize_ShouldReturnNull" name="[1] SMALL, 20" metainfo="kspt.bank.enums.CellSize, int" status="passed">
                <output type="stdout">2018-12-21 03:07:00.819  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@443b9ebb: startup date [Fri Dec 21 03:07:00 MSK 2018]; root of context hierarchy
2018-12-21 03:07:00.819  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
            </test>
            <test duration="14" locationUrl="java:test://kspt.bank.domain.VaultTest.testRequestCellOfSize_ShouldReturnNull" name="[2] MEDIUM, 10" metainfo="kspt.bank.enums.CellSize, int" status="passed">
                <output type="stdout">2018-12-21 03:07:00.930  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@383a5260: startup date [Fri Dec 21 03:07:00 MSK 2018]; root of context hierarchy
2018-12-21 03:07:00.931  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
            </test>
            <test duration="10" locationUrl="java:test://kspt.bank.domain.VaultTest.testRequestCellOfSize_ShouldReturnNull" name="[3] BIG, 5" metainfo="kspt.bank.enums.CellSize, int" status="passed">
                <output type="stdout">2018-12-21 03:07:01.056  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4a985388: startup date [Fri Dec 21 03:07:00 MSK 2018]; root of context hierarchy
2018-12-21 03:07:01.057  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
            </test>
        </suite>
        <suite duration="24" locationUrl="java:test://kspt.bank.domain.VaultTest.testRequestCellOfSize_ShouldReturnRequestedSize" name="testRequestCellOfSize_ShouldReturnRequestedSize(CellSize)" metainfo="kspt.bank.enums.CellSize" status="passed">
            <test duration="3" locationUrl="java:test://kspt.bank.domain.VaultTest.testRequestCellOfSize_ShouldReturnRequestedSize" name="[1] SMALL" metainfo="kspt.bank.enums.CellSize" status="passed">
                <output type="stdout">2018-12-21 03:07:01.185  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6980fa39: startup date [Fri Dec 21 03:07:01 MSK 2018]; root of context hierarchy
2018-12-21 03:07:01.186  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
            </test>
            <test duration="12" locationUrl="java:test://kspt.bank.domain.VaultTest.testRequestCellOfSize_ShouldReturnRequestedSize" name="[2] MEDIUM" metainfo="kspt.bank.enums.CellSize" status="passed">
                <output type="stdout">2018-12-21 03:07:01.295  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7ceb7a60: startup date [Fri Dec 21 03:07:01 MSK 2018]; root of context hierarchy
2018-12-21 03:07:01.296  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
            </test>
            <test duration="9" locationUrl="java:test://kspt.bank.domain.VaultTest.testRequestCellOfSize_ShouldReturnRequestedSize" name="[3] BIG" metainfo="kspt.bank.enums.CellSize" status="passed">
                <output type="stdout">2018-12-21 03:07:01.433  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1eaf4e77: startup date [Fri Dec 21 03:07:01 MSK 2018]; root of context hierarchy
2018-12-21 03:07:01.434  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
            </test>
        </suite>
        <suite duration="16" locationUrl="java:test://kspt.bank.domain.VaultTest.testGetNumberOfAvailableCells_SomeLeased" name="testGetNumberOfAvailableCells_SomeLeased(CellSize, int)" metainfo="kspt.bank.enums.CellSize, int" status="passed">
            <test duration="3" locationUrl="java:test://kspt.bank.domain.VaultTest.testGetNumberOfAvailableCells_SomeLeased" name="[1] SMALL, 20" metainfo="kspt.bank.enums.CellSize, int" status="passed">
                <output type="stdout">2018-12-21 03:07:01.561  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@21f27bb5: startup date [Fri Dec 21 03:07:01 MSK 2018]; root of context hierarchy
2018-12-21 03:07:01.561  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
            </test>
            <test duration="11" locationUrl="java:test://kspt.bank.domain.VaultTest.testGetNumberOfAvailableCells_SomeLeased" name="[2] MEDIUM, 10" metainfo="kspt.bank.enums.CellSize, int" status="passed">
                <output type="stdout">2018-12-21 03:07:01.684  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ddc5857: startup date [Fri Dec 21 03:07:01 MSK 2018]; root of context hierarchy
2018-12-21 03:07:01.690  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
            </test>
            <test duration="2" locationUrl="java:test://kspt.bank.domain.VaultTest.testGetNumberOfAvailableCells_SomeLeased" name="[3] BIG, 5" metainfo="kspt.bank.enums.CellSize, int" status="passed">
                <output type="stdout">2018-12-21 03:07:01.801  INFO 9756 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4fbdee7a: startup date [Fri Dec 21 03:07:01 MSK 2018]; root of context hierarchy
2018-12-21 03:07:01.801  INFO 9756 --- [           main] kspt.bank.domain.Vault                   : Closing the Vault...
</output>
            </test>
        </suite>
    </suite>
    <suite duration="3095" locationUrl="java:suite://kspt.bank.LeasingExpiryTest" name="LeasingExpiryTest" status="passed">
        <test duration="1057" locationUrl="java:test://kspt.bank.LeasingExpiryTest.testBusinessProcess_StopLeasingWhenPreciousIsInCell" name="testBusinessProcess_StopLeasingWhenPreciousIsInCell()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:07:02.922  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@157ff8f8 testClass = LeasingExpiryTest, testInstance = kspt.bank.LeasingExpiryTest@4a1abba1, testMethod = testBusinessProcess_StopLeasingWhenPreciousIsInCell@LeasingExpiryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@67263db7 testClass = LeasingExpiryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@4a2bc71f key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@f14d079]; rollback [true]
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: insert into precious (id, name, volume) values (null, ?, ?)
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: insert into precious (id, name, volume) values (null, ?, ?)
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.birth_date as birth_da3_2_0_, client0_.first_name as first_na4_2_0_, client0_.last_name as last_nam5_2_0_, client0_.patronymic as patronym6_2_0_, client0_.serial as serial7_2_0_, client0_.phone as phone8_2_0_ from client client0_ where client0_.id=?
2018-12-21 03:07:03.952  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@157ff8f8 testClass = LeasingExpiryTest, testInstance = kspt.bank.LeasingExpiryTest@4a1abba1, testMethod = testBusinessProcess_StopLeasingWhenPreciousIsInCell@LeasingExpiryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@67263db7 testClass = LeasingExpiryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@4a2bc71f key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="1018" locationUrl="java:test://kspt.bank.LeasingExpiryTest.testBusinessProcess_ContinueLeasing" name="testBusinessProcess_ContinueLeasing()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:07:03.959  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@157ff8f8 testClass = LeasingExpiryTest, testInstance = kspt.bank.LeasingExpiryTest@38614875, testMethod = testBusinessProcess_ContinueLeasing@LeasingExpiryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@67263db7 testClass = LeasingExpiryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@4a2bc71f key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@f14d079]; rollback [true]
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.birth_date as birth_da3_2_0_, client0_.first_name as first_na4_2_0_, client0_.last_name as last_nam5_2_0_, client0_.patronymic as patronym6_2_0_, client0_.serial as serial7_2_0_, client0_.phone as phone8_2_0_ from client client0_ where client0_.id=?
Hibernate: insert into cellapplication (id, cell_id, period_d, period_m, period_y, client_id, status) values (null, ?, ?, ?, ?, ?, ?)
2018-12-21 03:07:04.975  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@157ff8f8 testClass = LeasingExpiryTest, testInstance = kspt.bank.LeasingExpiryTest@38614875, testMethod = testBusinessProcess_ContinueLeasing@LeasingExpiryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@67263db7 testClass = LeasingExpiryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@4a2bc71f key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
        <test duration="1020" locationUrl="java:test://kspt.bank.LeasingExpiryTest.testBusinessProcess_StopLeasingWhenCellIsEmpty" name="testBusinessProcess_StopLeasingWhenCellIsEmpty()" metainfo="" status="passed">
            <output type="stdout">2018-12-21 03:07:04.980  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@157ff8f8 testClass = LeasingExpiryTest, testInstance = kspt.bank.LeasingExpiryTest@4d6fa22c, testMethod = testBusinessProcess_StopLeasingWhenCellIsEmpty@LeasingExpiryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@67263db7 testClass = LeasingExpiryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@4a2bc71f key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@f14d079]; rollback [true]
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.birth_date as birth_da3_2_0_, client0_.first_name as first_na4_2_0_, client0_.last_name as last_nam5_2_0_, client0_.patronymic as patronym6_2_0_, client0_.serial as serial7_2_0_, client0_.phone as phone8_2_0_ from client client0_ where client0_.id=?
2018-12-21 03:07:05.996  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@157ff8f8 testClass = LeasingExpiryTest, testInstance = kspt.bank.LeasingExpiryTest@4d6fa22c, testMethod = testBusinessProcess_StopLeasingWhenCellIsEmpty@LeasingExpiryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@67263db7 testClass = LeasingExpiryTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@4a2bc71f key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.LeasingControlInteractor, class kspt.bank.LeasingExpiryTest$Config]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
        </test>
    </suite>
    <suite duration="77" locationUrl="java:suite://kspt.bank.ManipulationTest" name="ManipulationTest" status="passed">
        <suite duration="77" locationUrl="java:test://kspt.bank.ManipulationTest.testBusinessProcess" name="testBusinessProcess(CellSize)" metainfo="kspt.bank.enums.CellSize" status="passed">
            <test duration="30" locationUrl="java:test://kspt.bank.ManipulationTest.testBusinessProcess" name="[1] SMALL" metainfo="kspt.bank.enums.CellSize" status="passed">
                <output type="stdout">2018-12-21 03:07:06.808  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6347ebbc testClass = ManipulationTest, testInstance = kspt.bank.ManipulationTest@b61aa50, testMethod = testBusinessProcess@ManipulationTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77c4aeb6 testClass = ManipulationTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@54455c8d key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@e50e308]; rollback [true]
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
2018-12-21 03:07:06.833  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@6347ebbc testClass = ManipulationTest, testInstance = kspt.bank.ManipulationTest@b61aa50, testMethod = testBusinessProcess@ManipulationTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77c4aeb6 testClass = ManipulationTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@54455c8d key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
            <test duration="20" locationUrl="java:test://kspt.bank.ManipulationTest.testBusinessProcess" name="[2] MEDIUM" metainfo="kspt.bank.enums.CellSize" status="passed">
                <output type="stdout">2018-12-21 03:07:06.843  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6347ebbc testClass = ManipulationTest, testInstance = kspt.bank.ManipulationTest@261d7ee2, testMethod = testBusinessProcess@ManipulationTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77c4aeb6 testClass = ManipulationTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@54455c8d key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@e50e308]; rollback [true]
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
2018-12-21 03:07:06.861  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@6347ebbc testClass = ManipulationTest, testInstance = kspt.bank.ManipulationTest@261d7ee2, testMethod = testBusinessProcess@ManipulationTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77c4aeb6 testClass = ManipulationTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@54455c8d key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
            <test duration="27" locationUrl="java:test://kspt.bank.ManipulationTest.testBusinessProcess" name="[3] BIG" metainfo="kspt.bank.enums.CellSize" status="passed">
                <output type="stdout">2018-12-21 03:07:06.864  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6347ebbc testClass = ManipulationTest, testInstance = kspt.bank.ManipulationTest@7b7268db, testMethod = testBusinessProcess@ManipulationTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77c4aeb6 testClass = ManipulationTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@54455c8d key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@e50e308]; rollback [true]
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: select cell0_.pending as col_0_0_ from cell cell0_ where cell0_.id=?
Hibernate: insert into client (id, email, birth_date, first_name, last_name, patronymic, serial, phone) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
Hibernate: select cell0_.id as id1_0_1_, cell0_.expired as expired2_0_1_, cell0_.lease_begin as lease_be3_0_1_, cell0_.lease_end as lease_en4_0_1_, cell0_.client_id as client_i8_0_1_, cell0_.precious_id as precious9_0_1_, cell0_.real_id as real_id5_0_1_, cell0_.pending as pending6_0_1_, cell0_.size as size7_0_1_, precious1_.id as id1_3_0_, precious1_.name as name2_3_0_, precious1_.volume as volume3_3_0_ from cell cell0_ left outer join precious precious1_ on cell0_.precious_id=precious1_.id where cell0_.id=?
2018-12-21 03:07:06.888  INFO 9756 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@6347ebbc testClass = ManipulationTest, testInstance = kspt.bank.ManipulationTest@7b7268db, testMethod = testBusinessProcess@ManipulationTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77c4aeb6 testClass = ManipulationTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config, class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@248e319b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@188838a5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1c5920df, [ImportsContextCustomizer@54455c8d key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=NONE, value=[], properties=[], classes=[class kspt.bank.domain.Vault, class kspt.bank.config.VaultConfig, class kspt.bank.domain.CellManipulationInteractor, class kspt.bank.ManipulationTest$Config]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5032714f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5386659f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7c37508a], contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[[empty]]]
</output>
            </test>
        </suite>
    </suite>
</testrun>
